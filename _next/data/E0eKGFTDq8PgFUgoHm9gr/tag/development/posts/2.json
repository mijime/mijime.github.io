{"pageProps":{"siteName":"My snippets","page":2,"pageSize":5,"tag":"development","posts":[{"title":"JSの正規表現の再帰にはまった","description":"\nのでメモる\n\n再帰的に正規表現で抜き出して詰めたい場合があるとする。\n\n<!--more-->\n\n```js\nfunction regexpr(re, text, acc = []) {\n  con","createdAt":"2017-04-19T22:48:28.000Z","tags":["development","javascript"],"draft":false,"slug":"2017/04/20/regexp-recursive","content":"\nのでメモる\n\n再帰的に正規表現で抜き出して詰めたい場合があるとする。\n\n<!--more-->\n\n```js\nfunction regexpr(re, text, acc = []) {\n  const res = re.exec(text)\n  return res\n    ? regexpr(\n        re,\n        text.substr(res.index + res[0].length, text.length),\n        acc.concat(res)\n      )\n    : acc\n}\n```\n\nこのとき chrome さんだと、 g オプションつけた時で結果が異なる。\n\n```js\nregexpr(/hello|world/, 'hello world') // => [\"hello\", \"world\"]\nregexpr(/hello|world/g, 'hello world') // => [\"hello\"]\nregexpr(/hello|world/, 'hello world hello world') // => [\"hello\", \"world\", \"hello\", \"world\"]\nregexpr(/hello|world/g, 'hello world hello world') // => [\"hello\", \"hello\"]\n```\n\nindex や結果は変わらないのに、なんでだろう\n"},{"title":"docker compose 3","description":"\nいつバージョン 3 になったんだ、、あとで差分チェックする\n","createdAt":"2017-04-11T01:25:47.000Z","tags":["development","golang"],"draft":false,"slug":"2017/04/11/docker-compose-3","content":"\nいつバージョン 3 になったんだ、、あとで差分チェックする\n"},{"title":"ReactでMarkdownEditorを作ったかんそう","description":"\n## 作ったもの\n\nhttps://github.com/mijime/markdown-editor\n\nダウンロードすればオフラインでも使えるマークダウンエディタを作りたかった\n\n---\n\n## ","createdAt":"2017-04-09T13:40:10.000Z","tags":["development","react"],"draft":false,"slug":"2017/04/09/thoughts-on-react","content":"\n## 作ったもの\n\nhttps://github.com/mijime/markdown-editor\n\nダウンロードすればオフラインでも使えるマークダウンエディタを作りたかった\n\n---\n\n## 使ってよかったもの\n\n## Rehype, Remark\n\n- https://github.com/wooorm/rehype\n- https://github.com/wooorm/remark\n\nHTML や Markdown を AST に変換してくれる。\n\nMarked が String を既にがっちゃんこ状態で投げてくるので\ndangerouslySetInnerHTML を使わざるえない影響が出てくる。\n\nそういうときは上の Rehype, Remark で AST に変換してから React コンポーネントにするアプローチが良さげ。\n\nreact-markdown ていうのもあったけど commonmark に準拠してるらしく、テーブルの変換ができなかったので諦めた。\nあと commonmark が割と容量食ってたのもある。\n\nremark-react を使わなかったのは highlight 系のライブラリをかます必要があったのと\n`markdown -> html -> react` の流れのほうが拡張しやすく感じた。\n絵文字対応もさくっといけたし。\n\nなんかやるとき、もしくはデンジャラスなコードを強要されたときはまた使ってみたい。\n\nただ、 marked の方が軽量ではあったので、1 回きりの表示なら marked のほうが断然良さそう。\n\n## Prism.js\n\n- http://prismjs.com/\n\nhighlight.js を Minify すると中身が飛びでて辛いときに使ったやつ。\n\nプロセッサも分かれてるのでそのまま rehype に流せた。\n\nプラッガブルでなかなかに軽量なので、おすすめしていきたい。\n\n## Preact\n\n- https://preactjs.com/\n\nReact がでかすぎたので使って見た。\n\nwebpack-bundle-size-anlyzer をつかってサイズを比較した。\n\nReactDOM + React が 500+kb なのに対し、 Preact + Preact-compat が 35kb 前後？良い。\n\nReact-Redux は普通に使えたので、 問題はなかった。 React-helmet とか React-router 周りはまだ試していない。\nただ、Preact-helmet や Preact-router とかあるし、なんだかんだでまた使えそう。\n\ndio.js とかも同様も簡単に乗り換えられるか試したけど、 Preact-compat はだいぶ頑張っているのが分かっただけだった。\n\nJest や StyleGuidist なんかが React を強要するので、 Webpack でビルド時のみ差し替える運用にした。\n\n## milligram\n\n- https://milligram.github.io/\n\nマークダウンプレビューとしては綺麗に表示できるので、\nみんな Github.css から乗り換えるべきだと思う。軽量ですし。\n\nただ、シンプルなコンポーネントしかないので\nUI が複雑になってきたなら Material なんちゃら系の方が良さそう、とは思う\n\n---\n\n## 見送ったもの\n\n## highlight.js\n\nみんな言語絞って使ってるくさい。最初、何度圧縮してもクソでかくて不思議だった。\n言語によっては圧縮時に飛び出る。 と思ったけど browserify 使った時は問題なさそう。. だった？\n\n使うのやめた。\n\n## CodeMirror\n\n重量がなかなかあったので、採用を見送った。 vim mode 試したかった。\n\nもっと軽量なエディタがあれば選択肢に入れたかったので、あとで探す。\n\n---\n\n## React.setState\n\nReact の setState は使わずに pure component だけで構成したかったので。\n\n非同期に描画してコンポーネント内だけで完結するなら、 state を使って書いた方が切り出しやすかった。\n\n## Flow\n\n今回は頑張って Flowtype に立ち向かってみた。 Flow-jsdoc で JSDoc と同期をとりつつ、みたいなことを実現したかったが、\ntype 周りが対応してなかったので結局 flow-comment をちりばめながら書くはめになった。\n\nあと、flow さんって commonjs スタイル読み取ってくれないのが一番のショックだった。\nその他にも、他のライブラリの \\*.flow にビンビン反応していくのもちょいちょい辛い。\n"},{"title":" kanazawa.rb meetup 46に参加した","description":"\n## AWS Lambda を管理するツール Lamma やってみた\n\nRuby で書かれた lammba というリポジトリが上がったので\nruby 勉強会に参加がてら触ってみた\n\n### [lam","createdAt":"2016-06-18T04:23:05.000Z","tags":["development","lambda","kzrb"],"draft":false,"slug":"study/kanazawa.rb/2016/06/18","content":"\n## AWS Lambda を管理するツール Lamma やってみた\n\nRuby で書かれた lammba というリポジトリが上がったので\nruby 勉強会に参加がてら触ってみた\n\n### [lamma](https://github.com/ayemos/Lamma)\n\n### 作業リポジトリ\n\n[source](https://github.com/mijime/mijime.github.io/tree/content/source/study/kanazawa.rb/2016-06-18)\n\n### 作業雑感\n\nシンプルな Lambda 管理ツール\n\n#### Pros\n\n- 1 dir, 1 func なのでわかりやすいね\n- 勝手に zip してくれるね\n- Ruby なので今後拡張しやすい、のかな？\n\n#### Cons\n\n- nodejs, python2.7 のみ対応\n- 消したりするのめんどくさそう ... まぁ関数だけだからいいんだけども ...\n- node_modules 入ってない？\n\n### 作業ログ\n\nまずは環境作成\n\n```ruby\nsource \"https://rubygems.org\"\n\ngem \"lamma\"\n```\n\n```\nFROM ruby\n\nCOPY Gemfile /var/app/Gemfile\nWORKDIR /var/app\nRUN bundle install\n```\n\n```\n---\nversion: '2'\nservices:\n  app:\n    build: .\n    command: sleep 3600\n    environment:\n      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}\n      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}\n    volumes:\n      - ./scripts:/var/app/scripts\n```\n\nとりあえずインストールして実行してみる\n\nAWS 関連の情報を渡して ...\n\n```\neval $(cat ~/.aws/credentials | awk -v FS=\" = \" '$1~/^aws/{print \"export\",toupper($1)\"=\"$2}')\n```\n\n関数を作成してみる\n\n```\nlamma create scripts/my-function-1 --runtime python2.7\n\nCreating function at directory ./scripts/my-function-1.\nbundler: failed to load command: lamma (/usr/local/bundle/bin/lamma)\nNoMethodError: undefined method `match' for nil:NilClass\nDid you mean?  catch\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/aws-sdk-core/endpoint_provider.rb:67:in `block in partition_matching_region'\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/aws-sdk-core/endpoint_provider.rb:66:in `each'\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/aws-sdk-core/endpoint_provider.rb:66:in `find'\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/aws-sdk-core/endpoint_provider.rb:66:in `partition_matching_region'\n...\n```\n\nうーん ... なぜに nil ...\n\nAWS_REGION を渡す\n\n```diff\ndiff --git a/source/study/kanazawa.rb/2016-06-18/docker-compose.yml b/source/study/kanazawa.rb/2016-06-18/docker-compose.yml\nindex e03b010..2784d3c 100644\n--- a/source/study/kanazawa.rb/2016-06-18/docker-compose.yml\n+++ b/source/study/kanazawa.rb/2016-06-18/docker-compose.yml\n@@ -7,5 +7,6 @@ services:\n     environment:\n       AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}\n       AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}\n+      AWS_REGION: ap-northeast-1\n     volumes:\n       - ./scripts:/var/app/scripts\n```\n\n```\n$ lamma create my-function --runtime python2.7\n\nCreating function at directory ./my-function.\nDone.\n```\n\n```\n$ tree .\n\nmy-function\n  ├── lambda_function.py\n  └── lamma.conf\n\n1 directory, 2 files\n```\n\nまだこの時点で関数は作られていないみたい ... なんで AWS 認証求められたんだ\n\ndeploy してみる。\n\n```\n$ lamma deploy test\n\nLoading configuration.\nDone.\nbundler: failed to load command: lamma (/usr/local/bundle/bin/lamma)\nAws::Lambda::Errors::BadRequest:\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/seahorse/client/plugins/raise_response_errors.rb:15:in `call'\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/aws-sdk-core/plugins/param_converter.rb:20:in `call'\n/usr/local/bundle/gems/aws-sdk-core-2.3.14/lib/seahorse/client/plugins/response_target.rb:21:in `call'\n```\n\nうーん ... ?\n\nよくわからないので JS で作り直す\n\n```\n$ lamma create my-function-js --runtime nodejs\n\nCreating function at directory ./my-function-js.\nDone.\n```\n\n```\n$ lamma deploy test\n\nLoading configuration.\nDone.\nFunction 'my-function-js' doesn't seem to be exists.\nDo you want to create new function 'my-function-js' ? (y/n) y\nCreating function 'my-function-js' ...\nbundler: failed to load command: lamma (/usr/local/bundle/bin/lamma)\nErrno::ENOENT: No such file or directory @ rb_sysopen - /tmp/d20160618-92-1fppw7/lambda.zip\n  /usr/local/bundle/gems/lamma-0.1.1/lib/lamma/function.rb:57:in `initialize'\n...\n```\n\nzip ...\n\n```diff\ndiff --git a/source/study/kanazawa.rb/2016-06-18/Dockerfile b/source/study/kanazawa.rb/2016-06-18/Dockerfile\nindex f9e4aff..0595f36 100644\n--- a/source/study/kanazawa.rb/2016-06-18/Dockerfile\n+++ b/source/study/kanazawa.rb/2016-06-18/Dockerfile\n@@ -3,3 +3,4 @@ FROM ruby\nCOPY Gemfile /var/app/Gemfile\nWORKDIR /var/app\nRUN bundle install\n+RUN apt-get update && apt-get install -y zip\n```\n\n```\n$ lamma deploy test\n\nLoading configuration.\nDone.\nFunction 'my-function-js' doesn't seem to be exists.\nDo you want to create new function 'my-function-js' ? (y/n) y\nCreating function 'my-function-js' ...\nadding: lamma.conf (deflated 17%)\nadding: index.js (deflated 45%)\nArgumentError occured. You might need to specify role arn you want to pass to your function via 'lamma.conf' file or ENV['AWS_LAMBDA_IAM_ROLE'].\nDone.\n```\n\nほむほむ ... あんましロールを書きたくないので env で\n\n```\nexport AWS_LAMBDA_IAM_ROLE=arn:aws:iam::000000000000:role/lambda_basic_execution\n```\n\n```\n$ lamma deploy test\n\nLoading configuration.\nDone.\nFunction 'my-function-js' doesn't seem to be exists.\nDo you want to create new function 'my-function-js' ? (y/n) y\nCreating function 'my-function-js' ...\nadding: lamma.conf (deflated 17%)\nadding: index.js (deflated 45%)\nDone.\nSetting aliases.\nDone.\n```\n\n```\n$ lamma list-functions\n\nmy-function-js\n```\n\nできた。\n\n## LT 感想\n\n### シェルチェックを使おう\n\n- 文法がバラバラなので統一する\n- 各環境でパッケージとして提供されている\n\n確かにシェルは動かすの簡単だけど、 他の環境で動かないことが多い ...\n\n### shUnit2 を使おう\n\n- 対応シェルも幅広い\n- ダウンロードするだけで使える！\n\nbats 派だけど、 msys でも早いなら乗り換えたいかも\n\n### Dokku\n\n- Heroku like\n- 前面に nginx があって、 コンテナにルーティング\n- heroku の build packs も利用できるので良い！\n- 運用メンテナンスが気になるところ\n\nスケーリングしないとかで敬遠してたけども、 開発環境で利用するなら楽だよなぁ\n\nだいぶバージョンアップされているとのことなので、触ってみたい\n\nもっと利用されるという話なので、その話を聞いてからかな？\n\ndokku-alt との違いもあとで調べておこう ...\n\n### AWSSummit\n\nSIer が完全に淘汰されちゃう感じ\n\nPaaS, SaaS の流行には全然触れてなかったので、 今回の話を機会に調べてみよう ...\n\n### Iot\n\n書き込むのに結構ツールが必要なんですね ...\n\nIOT 超絶敷居高い。\n"},{"title":"mermaidに対応した","description":"\ncode.language-mermaid を変換するスクリプトを噛ませただけだけど。\n\n```mermaid\n  graph TD;\n    A-->B;\n    A-->C;\n    B-->D","createdAt":"2016-05-31T13:41:30.000Z","tags":["development","mermaid"],"draft":false,"slug":"hugo/code-mermaid","content":"\ncode.language-mermaid を変換するスクリプトを噛ませただけだけど。\n\n```mermaid\n  graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n```mermaid\n  gantt\n    dateFormat  YYYY-MM-DD\n    title Adding GANTT diagram functionality to mermaid\n    section A section\n    Completed task: done,   des1,       2014-01-06, 2014-01-08\n    Active task:    active, des2,       2014-01-09, 3d\n    Future task:    des3,   after des2, 5d\n    Future task2:   des4,   after des3, 5d\n    section Critical tasks\n    Completed task in the critical line :crit, done, 2014-01-06, 24h\n    Implement parser and jison          :crit, done, after des1, 2d\n    Create tests for parser             :crit, active, 3d\n    Future task in critical line        :crit, 5d\n    Create tests for renderer           :2d\n    Add to mermaid                      :1d\n```\n\n```mermaid\n  sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n    John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n"}],"postCount":11},"__N_SSG":true}