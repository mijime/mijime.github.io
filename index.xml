<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My snippets</title>
    <link>/</link>
    <description>Recent content on My snippets</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 28 May 2016 13:48:27 +0900</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ブログの方針</title>
      <link>/posts/2016-05-28/blog-of-policy/</link>
      <pubDate>Sat, 28 May 2016 13:48:27 +0900</pubDate>
      
      <guid>/posts/2016-05-28/blog-of-policy/</guid>
      <description>

&lt;h3 id=&#34;記事の種別&#34;&gt;記事の種別&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tech系&lt;/p&gt;

&lt;p&gt;種類毎のタグで管理。 &amp;ldquo;セクション/メインのタグ&amp;rdquo; の下に書く。&lt;/p&gt;

&lt;p&gt;ある程度まとまってきたらタグごとのlayoutを使う。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ドウデモイイ系&lt;/p&gt;

&lt;p&gt;タグは基本的にはつけない。 &amp;ldquo;セクション/日付&amp;rdquo; の下に書く。&lt;/p&gt;

&lt;p&gt;適当に思いついたことを残す。あとからtech系に移しても良い。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;デプロイ方針&#34;&gt;デプロイ方針&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;記事更新以外はissue + branchで対応&lt;/p&gt;

&lt;p&gt;真面目にやろう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;スライド&#34;&gt;スライド&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sectionタイプとmarkdownタイプ両方かけるようにしておこう&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;勉強会/日付&amp;rdquo; で作っていく&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>my first slide</title>
      <link>/slides/2016-05-27/my-first-slide/</link>
      <pubDate>Fri, 27 May 2016 14:20:56 +0900</pubDate>
      
      <guid>/slides/2016-05-27/my-first-slide/</guid>
      <description>

&lt;h1 id=&#34;hugoでreveal-jsを始める&#34;&gt;HugoでReveal JSを始める&lt;/h1&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;始める&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;始めた&#34;&gt;始めた&lt;/h1&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div&amp;gt;
  hello world
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>背面派、前面派</title>
      <link>/posts/2016-05-26/border-implement/</link>
      <pubDate>Thu, 26 May 2016 21:13:19 +0900</pubDate>
      
      <guid>/posts/2016-05-26/border-implement/</guid>
      <description>&lt;p&gt;アプリ側で実装する際に、サーバ側で対応するかクライアント側で対応するか、という話。&lt;/p&gt;

&lt;p&gt;場合によりけりなのは分かっているけど、思わずクライアント側で対応しがちだよね、的な。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CIを始めるのが辛い</title>
      <link>/posts/2016-05-26/ci-is-difficult/</link>
      <pubDate>Thu, 26 May 2016 21:10:04 +0900</pubDate>
      
      <guid>/posts/2016-05-26/ci-is-difficult/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;環境が違う&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;サービスによっては1つ前のバージョンを使っていたりする。
開発環境は最新めなことが多いので、ハマる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;入れまくり&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ツールやパッケージやらインストールするのにダウンロードしまくる。
その時のリソースの潤沢な使い方に残念さを感じる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;回しすぎ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;初期環境を構築するのに、上2つも相まって過剰にリソースを消費する。
他人のサーバだからといって甘えすぎ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;回せない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;headlessな環境じゃ動かなかったり、expect前提だったり、特殊な環境前提だったり、
リソースが気軽にダウンロードできなかったりすると、回せない&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugo pagination</title>
      <link>/posts/2016-05-25/hugo-pagination/</link>
      <pubDate>Wed, 25 May 2016 14:05:50 +0900</pubDate>
      
      <guid>/posts/2016-05-25/hugo-pagination/</guid>
      <description>&lt;p&gt;.Paginatorを使えば自動でやってくれるみたい&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{- range (.Paginator 10).Pages }}
&amp;lt;div&amp;gt;
  {{ .Content }}
&amp;lt;/div&amp;gt;
{{- end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次頁、前頁へのリンクも .Paginatorを使う&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{- if or (.Paginator.HasPrev) (.Paginator.HasNext) }}
&amp;lt;nav role=&amp;quot;pagination&amp;quot;&amp;gt;
  {{- if .Paginator.HasPrev }}
    &amp;lt;a href=&amp;quot;{{ .Paginator.Prev.URL }}&amp;quot;&amp;gt;Prev&amp;lt;/a&amp;gt;
  {{- end }}
    &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Page {{ .Paginator.PageNumber }} of {{ .Paginator.TotalPages }}&amp;lt;/span&amp;gt;
  {{- if .Paginator.HasNext }}
    &amp;lt;a href=&amp;quot;{{ .Paginator.Next.URL }}&amp;quot;&amp;gt;Next&amp;lt;/a&amp;gt;
  {{- end }}
&amp;lt;/nav&amp;gt;
{{end}}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>introduce a github cli</title>
      <link>/posts/2016-05-23/github-cli/</link>
      <pubDate>Mon, 23 May 2016 22:48:11 +0900</pubDate>
      
      <guid>/posts/2016-05-23/github-cli/</guid>
      <description>&lt;p&gt;リポジトリをWebから作るのがめんどくさいので導入する。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/github/hub&#34;&gt;https://github.com/github/hub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hub create mijime.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ユーザ名とパスワードを入れるのはなんか嫌。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugo deploy to github pages</title>
      <link>/posts/2016-05-23/hugo-deploy/</link>
      <pubDate>Mon, 23 May 2016 22:39:17 +0900</pubDate>
      
      <guid>/posts/2016-05-23/hugo-deploy/</guid>
      <description>&lt;p&gt;master branchのみ適用されるらしいので、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;生成元はcontent branch&lt;/li&gt;
&lt;li&gt;public配下はmaster branch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;みたいな本来の使い方ではない使い方で運用する&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>first blogged</title>
      <link>/posts/2016-05-23/first-blogged/</link>
      <pubDate>Mon, 23 May 2016 21:56:24 +0900</pubDate>
      
      <guid>/posts/2016-05-23/first-blogged/</guid>
      <description>&lt;p&gt;何を書いてく。&lt;/p&gt;

&lt;p&gt;やったネタやQiitaの下書き、外部マウンティング的な何かを行う。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>